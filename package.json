{
  "name": "konsti-monorepo",
  "private": true,
  "workspaces": [
    "client",
    "server"
  ],
  "type": "commonjs",
  "scripts": {
    "build-front:ci": "yarn workspace konsti-client build:ci && yarn copy-front",
    "build-front:dev": "yarn workspace konsti-client build:dev && yarn copy-front",
    "build-front:kube-dev": "yarn workspace konsti-client build:kube-dev && yarn copy-front",
    "build-front:prod": "yarn workspace konsti-client build:prod && yarn copy-front",
    "build-front:staging": "yarn workspace konsti-client build:staging && yarn copy-front",
    "build-server": "yarn workspace konsti-server build",
    "client": "yarn workspace konsti-client start",
    "copy-front": "rimraf server/front && ncp client/build server/front",
    "playwright": "yarn docker:db && npm-run-all --parallel server:test client playwright:install",
    "playwright:install": "npx playwright install && npx playwright test --ui --config ./playwright/",
    "playwright:trace": "npx playwright show-trace trace.zip",
    "playwright:debug": "PWDEBUG=1 npx playwright test --config ./playwright/",
    "docker-compose:start": "APP_SETTINGS=dev docker buildx build . --file Dockerfile --build-arg env=dev --tag server:latest --load && APP_SETTINGS=dev docker compose -f ./docker/docker-compose.yml up --detach --remove-orphans",
    "docker-compose:stop": "APP_SETTINGS=dev docker compose -f ./docker/docker-compose.yml down --remove-orphans",
    "docker-compose:test": "APP_SETTINGS=ci docker buildx build . --file Dockerfile --build-arg env=ci --tag server:latest --load && APP_SETTINGS=ci docker compose -f ./docker/docker-compose.yml -f ./playwright/docker-compose.yml up --attach playwright --remove-orphans --exit-code-from playwright --abort-on-container-exit",
    "docker:build-prod": "docker buildx build --build-arg env=prod -t konsti-prod --load .",
    "docker:build-staging": "docker buildx build --build-arg env=staging -t konsti-staging --load .",
    "docker:build-dev": "docker buildx build --build-arg env=dev -t konsti-dev --load .",
    "docker:start-dev-with-local-db": "yarn docker:build-dev && docker run -p 5000:5000 -d --env-file ./docker/docker-dev.env konsti-dev",
    "docker:db": "yarn docker:db-run 2>/dev/null || yarn docker:db-start",
    "docker:db-run": "docker run -p 27017:27017 -d --name konsti-mongodb mongo:8.0.9-noble",
    "docker:db-start": "docker start konsti-mongodb",
    "eslint-inspect-config": "eslint --inspect-config",
    "eslint-timings": "TIMING=1 yarn eslint",
    "eslint:client": "yarn workspace konsti-client eslint",
    "eslint:server": "yarn workspace konsti-server eslint",
    "eslint": "eslint .",
    "lint": "yarn eslint && yarn stylelint && yarn prettier:check",
    "populate-db:dummy": "yarn workspace konsti-server generate-data --clean --users --programItems --lotterySignups --eventLog",
    "populate-db:kompassi": "yarn workspace konsti-server generate-data --clean && yarn workspace konsti-server load-kompassi-data && yarn workspace konsti-server generate-data --users --lotterySignups --eventLog",
    "populate-db:event": "yarn workspace konsti-server generate-data --clean && yarn workspace konsti-server load-past-event-data && yarn workspace konsti-server generate-data --users --lotterySignups --eventLog",
    "postinstall": "husky|| true",
    "prettier:check": "prettier --check \"./**/*.{js,cjs,json,mdx,ts,mts,tsx,yml}\"",
    "prettier:write": "prettier --write \"./**/*.{js,cjs,json,mdx,ts,mts,tsx,yml}\"",
    "server": "yarn workspace konsti-server start:dev",
    "server:test": "yarn workspace konsti-server start:test",
    "start:dev": "yarn docker:db && npm-run-all --parallel server client",
    "start:test": "yarn docker:db && npm-run-all --parallel server:test client",
    "start": "yarn workspace konsti-server start",
    "stylelint": "yarn workspace konsti-client stylelint",
    "test-assign": "yarn workspace konsti-server test-assign",
    "test:watch": "yarn vitest watch",
    "test": "yarn vitest run",
    "type-check": "tsc --noEmit",
    "update-yarn": "yarn set version stable"
  },
  "dependencies": {
    "@yarnpkg/types": "4.0.1",
    "axios": "1.10.0",
    "dayjs": "1.11.13",
    "ncp": "2.0.0",
    "npm-run-all2": "8.0.4",
    "remeda": "2.23.2",
    "rimraf": "6.0.1",
    "typescript": "5.8.3",
    "zod": "3.25.67"
  },
  "devDependencies": {
    "@eslint-community/eslint-plugin-eslint-comments": "4.5.0",
    "@eslint/compat": "1.3.1",
    "@eslint/config-inspector": "1.1.0",
    "@eslint/js": "9.30.0",
    "@playwright/test": "1.53.1",
    "@types/eslint-plugin-jsx-a11y": "6.10.0",
    "@typescript-eslint/utils": "8.35.0",
    "@vitest/coverage-istanbul": "3.2.4",
    "@vitest/eslint-plugin": "1.3.3",
    "eslint": "9.30.0",
    "eslint-config-prettier": "10.1.5",
    "eslint-import-resolver-typescript": "3.9.0",
    "eslint-plugin-compat": "6.0.2",
    "eslint-plugin-import": "2.32.0",
    "eslint-plugin-jsx-a11y": "6.10.2",
    "eslint-plugin-mdx": "3.5.0",
    "eslint-plugin-n": "17.20.0",
    "eslint-plugin-only-error": "1.0.2",
    "eslint-plugin-prettier": "5.5.1",
    "eslint-plugin-promise": "7.2.1",
    "eslint-plugin-react": "7.37.5",
    "eslint-plugin-react-hooks": "5.2.0",
    "eslint-plugin-react-hooks-addons": "0.5.0",
    "eslint-plugin-unicorn": "59.0.1",
    "globals": "16.2.0",
    "jiti": "2.4.2",
    "prettier": "3.6.2",
    "typescript-eslint": "8.35.0",
    "vitest": "3.2.4"
  },
  "engines": {
    "node": ">=22.11.0"
  },
  "packageManager": "yarn@4.9.2"
}
